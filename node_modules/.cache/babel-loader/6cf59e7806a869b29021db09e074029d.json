{"ast":null,"code":"var _jsxFileName = \"/Users/erteka/Desktop/react/dbfPortf/client/src/contextBlog.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\n// import axios from \"axios\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BlogContext = /*#__PURE__*/React.createContext();\nconst BlogInitState = {\n  isLoading: false,\n  isERROR: false,\n  blogId: '',\n  allBlogs: [],\n  singleBlog: {}\n};\n\n// const GetBlogActions = {\n//     SET_LOADING: \"SET_LOADING\",\n//     SET_ERROR: \"SET_ERROR\",\n//     GET_BLOG_SINGLE: \"GET_BLOG_SINGLE\",\n//     GET_BLOGS: \"GET_BLOGS\",\n// }\n\nconst BlogReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        isLoading: true\n      };\n    case \"GET_BLOG_SINGLE\":\n      return {\n        ...state,\n        singleBlog: action.payload,\n        isLoading: false\n      };\n    case \"GET_BLOGS\":\n      return {\n        ...state,\n        allBlogs: action.payload.blogs,\n        isLoading: false\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        isERROR: action.payload.error\n      };\n    default:\n      return state;\n  }\n};\n_c = BlogReducer;\nconst BlogProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(BlogReducer, BlogInitState);\n\n  // const getSingleBlog = async (id) => {\n  //     try {\n  //         const blog = await axios.get(`http://localhost:5500/5R2I/blog/${id}`)\n  //         const blogData = blog.data;\n  //         dispatch({\n  //             type: BlogReducer.GET_BLOG_SINGLE,\n  //             payload: { blogData }\n  //         })\n  //     } catch (error) {\n  //         dispatch({\n  //             type: BlogReducer.SET_ERROR,\n  //             payload: { error: error.message }\n  //         })\n  //     }\n\n  // }\n\n  const value = {\n    singleBlog: state.singleBlog,\n    allBlogs: state.allBlogs\n  };\n  return /*#__PURE__*/_jsxDEV(BlogContext.Provider, {\n    value: {\n      value,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogProvider, \"JumMa/3H5FIMi3VB7VtVfs0RFSo=\");\n_c2 = BlogProvider;\nexport default BlogProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"BlogReducer\");\n$RefreshReg$(_c2, \"BlogProvider\");","map":{"version":3,"names":["React","useReducer","BlogContext","createContext","BlogInitState","isLoading","isERROR","blogId","allBlogs","singleBlog","BlogReducer","state","action","type","payload","blogs","error","BlogProvider","children","dispatch","value"],"sources":["/Users/erteka/Desktop/react/dbfPortf/client/src/contextBlog.js"],"sourcesContent":["import React, { useReducer } from \"react\"\n// import axios from \"axios\"\n\nexport const BlogContext = React.createContext()\n\nconst BlogInitState = {\n    isLoading: false,\n    isERROR: false,\n    blogId: '',\n    allBlogs: [],\n    singleBlog: {}\n}\n\n// const GetBlogActions = {\n//     SET_LOADING: \"SET_LOADING\",\n//     SET_ERROR: \"SET_ERROR\",\n//     GET_BLOG_SINGLE: \"GET_BLOG_SINGLE\",\n//     GET_BLOGS: \"GET_BLOGS\",\n// }\n\nconst BlogReducer = (state, action) => {\n    switch (action.type) {\n        case \"SET_LOADING\":\n            return { ...state, isLoading: true }\n        case \"GET_BLOG_SINGLE\":\n            return {\n                ...state,\n                singleBlog: action.payload,\n                isLoading: false\n            }\n        case \"GET_BLOGS\":\n            return {\n                ...state,\n                allBlogs: action.payload.blogs,\n                isLoading: false\n            }\n        case \"SET_ERROR\":\n            return {\n                ...state,\n                isERROR: action.payload.error,\n            }\n        default:\n            return state;\n    }\n}\n\n\nconst BlogProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(BlogReducer, BlogInitState)\n\n    // const getSingleBlog = async (id) => {\n    //     try {\n    //         const blog = await axios.get(`http://localhost:5500/5R2I/blog/${id}`)\n    //         const blogData = blog.data;\n    //         dispatch({\n    //             type: BlogReducer.GET_BLOG_SINGLE,\n    //             payload: { blogData }\n    //         })\n    //     } catch (error) {\n    //         dispatch({\n    //             type: BlogReducer.SET_ERROR,\n    //             payload: { error: error.message }\n    //         })\n    //     }\n\n    // }\n\n    const value = {\n        singleBlog: state.singleBlog,\n        allBlogs: state.allBlogs\n    }\n\n    return (\n        <BlogContext.Provider\n            value={{\n                value,\n                dispatch\n            }}\n        >\n            {children}\n        </BlogContext.Provider>\n    )\n}\nexport default BlogProvider"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC;AAAA;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAa,EAAE;AAEhD,MAAMC,aAAa,GAAG;EAClBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,KAAK;EACdC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,CAAC;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MACd,OAAO;QAAE,GAAGF,KAAK;QAAEN,SAAS,EAAE;MAAK,CAAC;IACxC,KAAK,iBAAiB;MAClB,OAAO;QACH,GAAGM,KAAK;QACRF,UAAU,EAAEG,MAAM,CAACE,OAAO;QAC1BT,SAAS,EAAE;MACf,CAAC;IACL,KAAK,WAAW;MACZ,OAAO;QACH,GAAGM,KAAK;QACRH,QAAQ,EAAEI,MAAM,CAACE,OAAO,CAACC,KAAK;QAC9BV,SAAS,EAAE;MACf,CAAC;IACL,KAAK,WAAW;MACZ,OAAO;QACH,GAAGM,KAAK;QACRL,OAAO,EAAEM,MAAM,CAACE,OAAO,CAACE;MAC5B,CAAC;IACL;MACI,OAAOL,KAAK;EAAC;AAEzB,CAAC;AAAA,KAxBKD,WAAW;AA2BjB,MAAMO,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAE9B,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGlB,UAAU,CAACS,WAAW,EAAEN,aAAa,CAAC;;EAEhE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,MAAMgB,KAAK,GAAG;IACVX,UAAU,EAAEE,KAAK,CAACF,UAAU;IAC5BD,QAAQ,EAAEG,KAAK,CAACH;EACpB,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IACjB,KAAK,EAAE;MACHY,KAAK;MACLD;IACJ,CAAE;IAAA,UAEDD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B,CAAC;AAAA,GApCKD,YAAY;AAAA,MAAZA,YAAY;AAqClB,eAAeA,YAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}